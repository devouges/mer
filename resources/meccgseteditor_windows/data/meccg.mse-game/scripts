############################################################## Localization

include file: language

#############################################################Default matching
	numbers_only := filter_rule(match: "[*+0-9-]")
	#symbols_only := filter_rule(match: "[?dDsSbBfFHKRwc]")
	#sites_only := filter_text(match: "[DSBFHKR]", input: value)

###############################################################Corruption Icon Scripts
corruption_icon := {
	if is_wizard() then "cp_icon_blank.png"
	else if (is_minionhero() and is_character()) then "cp_icon_hero_character.png"
	else if is_minionhero() then "cp_icon_hero.png"
	else if (is_hero() and is_character()) then "cp_icon_hero_character.png"
	else if (is_minion() and is_character()) then "cp_icon_minion_character.png"
	else if (is_minion() and is_hazard()) then "cp_icon_minion_character.png"
	else if is_minion() then "cp_icon_minion.png"
	else if is_hazard() then "cp_icon_hazard.png"
	else if is_hazardagent() then "cp_icon_hazard.png"
	else if is_elflord() then "cp_icon_elflord.png"
	else if is_dwarflord() then "cp_icon_dwarflord.png"
	else if is_dragonlord() then "cp_icon_dragonlord.png"
	else if is_stage() then "cp_icon_stage.png"
	else "cp_icon_hero.png"
	}


############################################################## Card number

# Process the name for sorting rules
sort_name :=
	# Remove "The", "A", and "And" at the beginning
	replace@(match: "^(The|An?) ", replace: "") +
	# Remove commas and apostrophes
	replace@(match: "(,|'|’)", replace: "") +
	# Remove bold and italic tags
	replace@(match: "(<b>|<i>|</b>|</i>)", replace: "") +
	# Make lowercase
	to_lower


card_number := {
	position (
		of: card
		in: set
		order_by: { sort_name(card.name) }
	) + 1
}
card_count := {
	number_of_items(in: set)
}

#Zero digits in card numbers should be shown up to three.
card_number_m15 := { (if card_number() < 100 then "0" else "") + (if card_number() < 10 then "0" else "") + card_number() }
card_count_m15 := { (if card_count() < 100 then "0" else "") + (if card_count() < 10 then "0" else "") + card_count() }

#######################################################################Spell Checking Filters
text_filter :=
	#Replace double dash to long dash
	replace@(
		match: "--"
		replace: "—"
	) +
	#####################################TESTING
	##This section will autocomplete Keywords to add site/region icons
	############################################
	# Site Region Icon AutoComplete
#	{ if set.site_icon_autocomplete then
#		replace@(
#			match: "Coastal",
#			replace: {"CoastalSeas " + ("\\[") + "<sym>" + "c" + "</sym>" + ("\\]") }
#			)
#			else input
#	} +
	############################################
	#Add CvCC Icon from Brackets
	replace@(
		match: "\\[[CV/|]+\\]",
		replace: {"<sym>" + input + "</sym>"} ) +
	#Add Site Icons from Brackets
	replace@(
		match: "\\[[wcfbsdHFBRSDKejP/|]+\\]",
		replace: {"<sym>" + input + "</sym>"} ) +
	#Add tap Icon from Brackets
	replace@(
		match: "\\[[tap/|]+\\]",
		replace: {"<sym>" + input + "</sym>"} ) +
	#Add MP Icon from Brackets
	replace@(
		match: "\\[[mp/|]+\\]",
		replace: {"<sym>" + input + "</sym>"} ) +
	#Add General Influence Icon from Brackets
	replace@(
		match: "\\[[GI/|]+\\]",
		replace: {"<sym>" + input + "</sym>"} ) +
	#Add Direct Influnce Icon from Brackets
	replace@(
		match: "\\[[EI/|]+\\]",
		replace: {"<sym>" + input + "</sym>"} ) +
	#Add Corruption Check Icon from brackets
	replace@(
		match: "\\[[CC/|]+\\]",
		replace: {"<sym>" + input + "</sym>"} ) +
	#Add Corruption Icon from brackets
	replace@(
		match: "\\[[CP/|]+\\]",
		replace: {"<sym>" + input + "</sym>"} ) +
##################################################
##Replaces to remove italics from brackets - works but
##stops all italics after brackets no matter what.  Needs more work
##################################################
	#Format site icon brackets (no italics)
	replace@(
		match: ("\\[")
		replace: "</i>"+ ("\\[")
	) +
	#Format site icon brackets (no italics)
	replace@(
		match: ("\\]")
		replace: ("\\]") +"<i>"
	) +
#################################################
	# Spellcheck
	{ if set.mark_errors then
		check_spelling(
			language: language().spellcheck_code,
			extra_dictionary: "/meccg.mse-game/meccg-words"
		)
	  else input
	} +
	curly_quotes


#################################################################
#### Flavor Text Filter and Checks
#################################################################
flavor_text_filter :=
	#Replace double dash to long dash
	replace@(
		match: "--"
		replace: { "<b>" + "—" }
	) +
	# Spellcheck
	{ if set.mark_errors then
		check_spelling(
			language: language().spellcheck_code,
			extra_dictionary: "/meccg.mse-game/meccg-words"
		)
	  else input
	} +
	#Set Size and Italics
	{ "<size:18><i>"+input+"</i></size>" } +
	curly_quotes

#######################################################################
######## Site Text Filter and Checks
###################################################################

###############Assign Variables for common text prefix
minion_site_first := "<b><i>Nearest Darkhaven:</i></b> "
hero_site_first := "<b><i>Nearest Haven:</i></b> "
balrog_site_first := "<b><i>Adjacent Sites:</i></b> "
stage_site_first := ""

#########Assign default prefix to sites based on type
site_default_text := {
	if is_minion_site() then minion_site_first
	else if is_balrog_site() then balrog_site_first
	else if is_minionhero_site() then balrog_site_first
	else if is_stage_site() then stage_site_first
	else hero_site_first
}

#######################Site Text Filter
site_text_filter :=
	#Replace double dash to long dash
	replace@(
		match: "--"
		replace: "—"
		) +
	#Replace single automatic attack dash to long dash
	replace@(
		match: " - "
		replace: " — "
		) +
	#Add Site Icons from Brackets
	replace@(
		match: "\\[[wcfbsdHFBRSDKejP/|]+\\]",
		replace: {"<sym>" + input + "</sym>"} ) +
	# Spellcheck
	{ if set.mark_errors then
		check_spelling(
			language: language().spellcheck_code,
			extra_dictionary: "/meccg.mse-game/meccg-words"
		)
	  else input
	}

######################################################################
######## Title Text Spell Checking
######################################################################
title_text_filter :=
	# Spellcheck
	{ if set.mark_errors then
		check_spelling(
			language: language().spellcheck_code,
			extra_dictionary: "/meccg.mse-game/meccg-words"
		)
	  else input
	}
